name: Aspire Cosmos DB Workflow

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x' # Use the appropriate version

    # Install required dependencies for Cosmos DB Emulator on Linux
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libunwind8 libcurl4 openssl

    # Restore dependencies for both projects
    - name: Restore dependencies
      run: |
        dotnet restore AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj
        dotnet restore AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj
    
    # Build both projects
    - name: Build
      run: |
        dotnet build AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj --no-restore
        dotnet build AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj --no-restore
    
    # Modify Program.cs to run in CI environment
    - name: Prepare Aspire for CI environment
      run: |
        # Create a backup of the original file
        cp AspireCosmosSimple/AspireCosmosSimple/Program.cs AspireCosmosSimple/AspireCosmosSimple/Program.cs.bak
        
        # Replace Console.ReadKey with a sleep timer for CI environment
        sed -i 's/Console.ReadKey();/Thread.Sleep(60000); \/\/ Sleep for 60 seconds instead of waiting for key press in CI environment/' AspireCosmosSimple/AspireCosmosSimple/Program.cs
        
        # Add using statement for Thread if not already present
        sed -i '1s/^/using System.Threading;\n/' AspireCosmosSimple/AspireCosmosSimple/Program.cs
        
        # Show the changes
        echo "Modified Program.cs for CI environment:"
        cat AspireCosmosSimple/AspireCosmosSimple/Program.cs
    
    # Run Aspire application in background
    - name: Start Aspire with Cosmos DB Emulator
      run: |
        # Start the application in the background
        dotnet run --project AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj > aspire_output.log 2>&1 &
        ASPIRE_PID=$!
        
        # Verify the process is running
        if ! ps -p $ASPIRE_PID > /dev/null; then
          echo "Failed to start Aspire application"
          cat aspire_output.log
          exit 1
        fi
        
        echo "Aspire application started with PID: $ASPIRE_PID"
        echo "Waiting for Cosmos DB emulator to initialize..."
        
        # Wait for the emulator to start
        sleep 60
        
        # Show the latest log entries
        echo "Last 20 lines of Aspire log:"
        tail -n 20 aspire_output.log
        
        # Run the test application
        echo "Running test application to verify Cosmos DB emulator..."
        dotnet run --project AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj
        TEST_RESULT=$?
        
        # Kill the Aspire application
        if ps -p $ASPIRE_PID > /dev/null; then
          echo "Stopping Aspire application..."
          kill $ASPIRE_PID
        fi
        
        # Restore the original Program.cs
        mv AspireCosmosSimple/AspireCosmosSimple/Program.cs.bak AspireCosmosSimple/AspireCosmosSimple/Program.cs
        
        # Return the test result
        exit $TEST_RESULT
