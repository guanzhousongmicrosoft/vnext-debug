name: Aspire Cosmos DB Workflow

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x' # Use the appropriate version

    # Install required dependencies for Cosmos DB Emulator on Linux
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libunwind8 libcurl4 openssl

    # Restore dependencies for both projects
    - name: Restore dependencies
      run: |
        dotnet restore AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj
        dotnet restore AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj
    
    # Build both projects
    - name: Build
      run: |
        dotnet build AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj --no-restore
        dotnet build AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj --no-restore
    
    # Run Aspire application in background
    - name: Start Aspire with Cosmos DB Emulator
      run: |
        # Create a temporary script to handle non-interactive console
        cat > run_aspire.sh << 'EOF'
        #!/bin/bash
        # Start the application and redirect input to prevent waiting for key press
        dotnet run --project AspireCosmosSimple/AspireCosmosSimple/AspireCosmosSimple.csproj < <(echo -e "\n") &
        # Store the process ID
        ASPIRE_PID=$!
        # Wait for emulator to start
        echo "Waiting for Cosmos DB emulator to start..."
        sleep 60  # Increase wait time to ensure emulator is fully started
        
        # Run the test application
        echo "Running test application to verify Cosmos DB emulator..."
        dotnet run --project AspireCosmosSimple/CosmosDBTest/CosmosDBTest.csproj
        TEST_RESULT=$?
        
        # Kill the Aspire application
        kill $ASPIRE_PID
        
        # Return the test result
        exit $TEST_RESULT
        EOF
        
        # Make the script executable
        chmod +x run_aspire.sh
        
        # Run the script
        ./run_aspire.sh
