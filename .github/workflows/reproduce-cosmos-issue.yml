name: Reproduce Azure Cosmos DB Emulator vNext Issue

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug_level:
        description: 'Debug level (1-3, higher = more verbose)'
        required: false
        default: '2'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
      test_scenario:
        description: 'Test scenario to run'
        required: false
        default: 'basic'
        type: choice
        options:
          - 'basic'
          - 'persistent'
          - 'ephemeral'
          - 'all'

env:
  DOTNET_VERSION: '9.0.x'
  COSMOS_EMULATOR_VERSION: 'latest'
  DEBUG_LEVEL: ${{ github.event.inputs.debug_level || '2' }}
  TEST_SCENARIO: ${{ github.event.inputs.test_scenario || 'basic' }}

jobs:
  test-ubuntu:
    name: Test on Ubuntu (Issue Reproduction)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Install .NET Aspire workload
      run: |
        echo "Installing .NET Aspire workload..."
        dotnet workload install aspire
        echo "Aspire workload installed successfully"
        
    - name: Setup Docker
      run: |
        echo "Setting up Docker..."
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo usermod -aG docker $USER
        echo "Docker setup completed"
        
    - name: Check Docker availability
      run: |
        echo "Checking Docker availability..."
        docker --version
        docker info
        echo "Testing Docker functionality..."
        docker run --rm hello-world
        echo "Docker is available and working correctly"
      
    - name: Pull Cosmos DB Emulator image
      run: |
        echo "Pre-pulling Cosmos DB emulator image..."
        docker pull mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:vnext-preview
        echo "Cosmos DB emulator image pulled successfully"
        
    - name: Run Ubuntu test
      run: |
        echo "Starting Cosmos DB emulator test..."
        chmod +x ./scripts/test-cosmos-ubuntu.sh
        ./scripts/test-cosmos-ubuntu.sh ${{ env.DEBUG_LEVEL }} ${{ env.TEST_SCENARIO }}
        
    - name: Upload Ubuntu logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ubuntu-logs
        path: logs/
        retention-days: 7

  analyze-results:
    name: Analyze Test Results
    needs: [test-ubuntu]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: collected-logs/
        
    - name: Analyze logs
      run: |
        chmod +x ./scripts/analyze-logs.sh
        ./scripts/analyze-logs.sh
        
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: analysis-results
        path: analysis/
        retention-days: 30
        
    - name: Create issue summary
      run: |
        chmod +x ./scripts/create-summary.sh
        ./scripts/create-summary.sh > $GITHUB_STEP_SUMMARY
